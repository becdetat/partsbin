@using partsbin.Helpers
@inject IJSRuntime JsRuntime
 
<div @ref="@_toolBar">
    @ToolbarContent
</div>
<div @ref="@_quillElement">
    @EditorContent
</div>
 
@code {
    [Parameter] public RenderFragment? EditorContent { get; set; }
    [Parameter] public RenderFragment? ToolbarContent { get; set; }
    [Parameter] public bool IsReadOnly { get; set; } = false;
    [Parameter] public string Placeholder { get; set; } = "Insert text here...";
    [Parameter] public string Theme { get; set; } = "snow";
    [Parameter] public string DebugLevel { get; set; } = "info";
 
    private ElementReference _quillElement;
    private ElementReference _toolBar;
 
    protected override async Task
        OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        
        await QuillHelper.CreateQuill(
            JsRuntime,
            _quillElement,
            _toolBar,
            IsReadOnly,
            Placeholder,
            Theme,
            DebugLevel);
    }
 
    public async Task<string> GetText()
    {
        return await QuillHelper.GetText(JsRuntime, _quillElement);
    }
 
    public async Task<string> GetHtml()
    {
        return await QuillHelper.GetHtml(JsRuntime, _quillElement);
    }
 
    public async Task<string> GetContent()
    {
        return await QuillHelper.GetContent(JsRuntime, _quillElement);
    }
 
    public async Task LoadContent(string content)
    {
        await QuillHelper.LoadQuillContent(JsRuntime, _quillElement, content);
    }
 
    public async Task EnableEditor(bool mode)
    {
        await QuillHelper.EnableQuillEditor(JsRuntime, _quillElement, mode);
    }
}