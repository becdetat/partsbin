@page "/part/{Id:int}"
@using partsbin.Services
@using partsbin.Helpers
@using partsbin.UiServices
@inject IPartService PartService;
@inject IPartUiService PartUiService;
@inject IToastService ToastService;

@if (_part is not null)
{
    <h3>@_part.Description - @_part.FormattedQuantity</h3>
}
else
{
    <div class="alert alert-danger" role="alert">
        <h3 class="alert-heading">Part not found</h3>
        <p>The part could not be found. You might have followed an invalid link, or the part may have been deleted.</p>
    </div>
}

@if (_part is not null)
{
    <div class="card">
        <h5 class="card-header">
            <PartQuantity Part="_part"/>
        </h5>
        <div class="card">
            <div class="card-body">
                <div class="card-text">
                    <div class="row">
                        <div class="col-md-4">
                            <p class="card-text">
                                <PartDetails Part="_part"/>
                            </p>
                        </div>
                        <div class="col-md-8">
                            <div class="row">
                                <div class="col">
                                    <h4>Notes</h4>
                                </div>
                                <div class="col text-end">
                                    @if (!_isEditingNotes)
                                    {
                                        <button class="btn btn-sm btn-outline-primary"
                                                @onclick:preventDefault
                                                @onclick="@EditNotes">
                                            <i class="oi oi-pencil"></i> Edit notes
                                        </button>
                                    }
                                </div>
                            </div>
                            @if (!_isEditingNotes)
                            {
                                @if (_part.HtmlNotes.HasContent())
                                {
                                    @((MarkupString)_part.HtmlNotes)
                                }
                                else
                                {
                                    <div class="alert alert-info" role="alert">
                                        No notes
                                    </div>
                                }
                            }
                            else
                            {
                                <PartNotesEditor Part="_part"
                                                 OnEditComplete="CompleteEditingNotes"
                                                 OnEditCancelled="CancelEditingNotes"/>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button @onclick="Edit" class="btn btn-sm btn-outline-primary">
                    <i class="oi oi-pencil"></i> Edit details
                </button>
            </div>
        </div>
    </div>

    <br/>

    <div class="card">
        <h5 class="card-header">Documents and data sheets</h5>
        <div class="list-group list-group-flush">
            <button class="list-group-item list-group-item-action">
                Data sheet
            </button>
            <button class="list-group-item list-group-item-action">
                Data sheet #2
            </button>
            <button class="list-group-item list-group-item-action">
                Data sheet #3
            </button>
        </div>
        <div class="card-footer">
            <button class="btn btn-sm btn-outline-primary"
                    @onclick="@(() => { })">
                Add new
            </button>
        </div>
    </div>

    <br/>

    <div class="card">
        <h5 class="card-header">Suppliers</h5>
        <div class="list-group list-group-flush">
            <button class="list-group-item list-group-item-action">
                Jaycar
            </button>
            <button class="list-group-item list-group-item-action">
                Mouser
            </button>
            <button class="list-group-item list-group-item-action">
                eBay
            </button>
        </div>
        <div class="card-footer">
            <button class="btn btn-sm btn-outline-primary"
                    @onclick="() => { }">
                Add new
            </button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private Part? _part;
    private bool _isEditingNotes;

    protected override void OnInitialized()
    {
        RefreshData();
    }

    private void RefreshData()
    {
        _part = PartService.GetPart(Id);
        StateHasChanged();
    }

    private async void Edit()
    {
        await PartUiService.EditPart(_part!);
        RefreshData();
        ToastService.ShowSuccess("The part details have been updated");
    }

    private void EditNotes()
    {
        _isEditingNotes = true;
        StateHasChanged();
    }

    private void CompleteEditingNotes()
    {
        _isEditingNotes = false;
        ToastService.ShowSuccess("The notes have been updated");
        StateHasChanged();
    }

    private void CancelEditingNotes()
    {
        _isEditingNotes = false;
        StateHasChanged();
    }
}