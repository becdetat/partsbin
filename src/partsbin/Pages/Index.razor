@page "/"
@using partsbin.Services
@using partsbin.Services.Results
@using partsbin.UiServices
@inject IPartTypeService PartTypeService;
@inject IPartUiService PartUiService; 

<div class="row">
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <h1>Part types and ranges</h1>
            </div>
            <div class="col-2 text-sm-right">
                <button @onclick="AddPart" class="btn btn-primary">
                    <i class="oi oi-plus"></i> Add a part
                </button>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        @if (_data is null)
        {
            <p><em>Loading...</em></p>
        } 
        else if (!_data.Any())
        {
            <div class="alert alert-info" role="alert">
                No parts have been added
            </div>
        }
        else
        {
            <div class="mt-2">
                <table class="table border">
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Range</th>
                            <th>Count</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in _data)
                    {
                        <tr>
                            <td><a href="/part-type/@item.PartType">@(item.PartType ?? "-")</a></td>
                            <td><a href="/range/@item.Range">@(item.Range ?? "-")</a></td>
                            <td>@item.Count</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>


@code {
    private IList<PartTypeAndRangesResult>? _data;
    
    protected override void OnInitialized()
    {
        RefreshData();
    }

    private void RefreshData()
    {
        _data = PartTypeService
            .GetPartTypesAndRanges()
            .OrderBy(x => x.PartType)
            .ThenBy(x => x.Range)
            .ToList();
        
        StateHasChanged();
    }

    private async void AddPart()
    {
        await PartUiService.AddPart();
        // TODO redirect to /part/id instead of refreshing
        RefreshData();
    }
}


